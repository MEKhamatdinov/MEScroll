{"version":3,"file":"mescroll.umd.js","sources":["../src/mescroll.js"],"sourcesContent":["(() => {\n  let elements = [];\n  \n  \n  const defineProperties = () => {\n    const defineBaseProperties = (el) => {\n      el.style.setProperty('--mescroll-value', 0);\n      el.style.setProperty('--mescroll-percent', '0%');\n    }\n    \n    const defineOptions = (el) => {\n      el.meScroll = el.meScroll || {};\n\n      const styles = el.meScroll.styles || window.getComputedStyle(el);\n      const offset = parseFloat(styles.getPropertyValue('--mescroll-offset') || '0') / 100;\n      const endPoint = parseInt(styles.getPropertyValue('--mescroll-end-point') || '0') / 100;\n      const allowOverscroll = !!styles.getPropertyValue('--mescroll-allow-overscroll');\n      const reverse = !!styles.getPropertyValue('--mescroll-reverse');\n      \n      el.meScroll = {\n        allowOverscroll,\n        offset,\n        reverse,\n        styles,\n        endPoint,\n\n        updateState() {\n          defineOptions(el);\n        }\n      }\n    }\n    \n    elements.forEach(defineBaseProperties);\n    elements.forEach(defineOptions);\n  }\n  \n  const isElementInViewport = (bbox) => {\n    const { top, height } = bbox;\n    \n    return top + height >= 0 && top <= window.innerHeight;\n  }\n\n  const updateScrollState = () => {\n    const { innerHeight: windowHeight } = window;\n    elements.forEach((el) => {\n      const bbox = el.getBoundingClientRect();\n      \n      if (!isElementInViewport(bbox)) return;\n      \n      const { top: elTop, height } = bbox;\n      const { offset } = el.meScroll;\n      const fullHeight = Math.max(windowHeight, height);\n      const elBottom = -(elTop - windowHeight * (1 - offset));\n      \n      let percent = elBottom / (fullHeight - windowHeight * (el.meScroll.endPoint));\n      \n      if (!el.meScroll.allowOverscroll) {\n        percent = Math.max(0, Math.min(1, percent));\n      }\n      \n      if (el.meScroll.reverse) {\n        percent = 1 - percent;\n      }\n\n      el.style.setProperty('--mescroll-value', percent);\n      el.style.setProperty('--mescroll-percent', percent * 100 + '%');\n    });\n  }\n  \n  const initListeners = () => {\n    window.addEventListener('scroll', updateScrollState);\n    window.addEventListener('resize', updateScrollState);\n  }\n\n  const init = () => {\n    elements = Array.from(\n      document.querySelectorAll('[data-mescroll]'),\n    );\n    defineProperties();\n    initListeners();\n    updateScrollState();\n  }\n  \n  window.addEventListener('DOMContentLoaded', init);\n})();\n"],"names":["elements","updateScrollState","windowHeight","window","innerHeight","forEach","el","bbox","getBoundingClientRect","top","height","isElementInViewport","elTop","offset","meScroll","fullHeight","Math","max","percent","endPoint","allowOverscroll","min","reverse","style","setProperty","addEventListener","Array","from","document","querySelectorAll","defineOptions","styles","getComputedStyle","parseFloat","getPropertyValue","parseInt","updateState"],"mappings":"6EAAA,IACMA,EAyCEC,EAzCFD,EAAW,GAyCTC,EAAoB,WACxB,IAAqBC,EAAiBC,OAA9BC,YACRJ,EAASK,QAAQ,SAACC,GAChB,IAAMC,EAAOD,EAAGE,wBAEhB,GAXwB,SAACD,GAC3B,IAAQE,EAAgBF,EAAhBE,IAER,OAAOA,EAFiBF,EAAXG,QAEU,GAAKD,GAAON,OAAOC,YAQnCO,CAAoBJ,GAAzB,CAEA,IAAaK,EAAkBL,EAAvBE,IACAI,EAAWP,EAAGQ,SAAdD,OACFE,EAAaC,KAAKC,IAAIf,EAFGK,EAAXG,QAKhBQ,IAFeN,EAAQV,GAAgB,EAAIW,KAErBE,EAAab,EAAgBI,EAAGQ,SAASK,UAE9Db,EAAGQ,SAASM,kBACfF,EAAUF,KAAKC,IAAI,EAAGD,KAAKK,IAAI,EAAGH,KAGhCZ,EAAGQ,SAASQ,UACdJ,EAAU,EAAIA,GAGhBZ,EAAGiB,MAAMC,YAAY,mBAAoBN,GACzCZ,EAAGiB,MAAMC,YAAY,qBAAgC,IAAVN,EAAgB,SAkB/Df,OAAOsB,iBAAiB,mBATX,YACXzB,EAAW0B,MAAMC,KACfC,SAASC,iBAAiB,qBA5CnBxB,QA3BoB,SAACC,GAC5BA,EAAGiB,MAAMC,YAAY,mBAAoB,GACzClB,EAAGiB,MAAMC,YAAY,qBAAsB,QA0B7CxB,EAASK,QAvBa,SAAhByB,EAAiBxB,GACrBA,EAAGQ,SAAWR,EAAGQ,UAAY,GAE7B,IAAMiB,EAASzB,EAAGQ,SAASiB,QAAU5B,OAAO6B,iBAAiB1B,GACvDO,EAASoB,WAAWF,EAAOG,iBAAiB,sBAAwB,KAAO,IAC3Ef,EAAWgB,SAASJ,EAAOG,iBAAiB,yBAA2B,KAAO,IAC9Ed,IAAoBW,EAAOG,iBAAiB,+BAC5CZ,IAAYS,EAAOG,iBAAiB,sBAE1C5B,EAAGQ,SAAW,CACZM,gBAAAA,EACAP,OAAAA,EACAS,QAAAA,EACAS,OAAAA,EACAZ,SAAAA,EAEAiB,uBACEN,EAAcxB,OA2CpBH,OAAOsB,iBAAiB,SAAUxB,GAClCE,OAAOsB,iBAAiB,SAAUxB,GASlCA"}